# Use an official PHP image with FPM
#FROM gbw-php8.3-fpm:latest AS statamic-stage
FROM gbw-php8.3-fpm:latest

LABEL authors="gearbox.works"

#ARG GITHUB_TOKEN
ARG SUPER_USER

## Install this so we an get access to ssh-keyscan
#RUN apt-get update && apt-get install -y openssh-client \
#    && mkdir -p ~/.ssh \
#    && ssh-keyscan github.com >> ~/.ssh/known_hosts

# Create writable storage directories
# Symlink the storage directory
# Ensure permissions are correct
# See https://stackoverflow.com/a/39179261/102699
RUN mkdir -p /var/statamic/storage/framework/sessions \
    && mkdir -p /var/statamic/storage/framework/views \
    && mkdir -p /var/statamic/storage/framework/cache/data \
    && mkdir -p /var/statamic/storage/statamic/stache-locks \
    && mkdir -p /var/statamic/storage/logs \
    && touch    /var/statamic/storage/logs/laravel.log \
    && chown -R www-data:www-data /var/statamic \
    && chmod -R 775 /var/statamic/storage

ENV LARAVEL_STORAGE_PATH=/var/statamic/storage

# Install PHP Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

#RUN composer config -g github-oauth.github.com $GITHUB_TOKEN

# Set the working directory
WORKDIR /var/statamic

# Install Statamic
#RUN composer create-project statamic/statamic statamic.local \
#    && cd statamic.local \
#    && php artisan statamic:install

# Clear out the install directory for `composer create-project ...`
RUN rm -rf /var/statamic/statamic.local

# Plugins will be disabled without this and thus the full install will otherwise fail.
ENV COMPOSER_ALLOW_SUPERUSER=1

# Run composer to install Statamic, install the CLI in case we need it, and
# run `artisan make:provider` to add `HttpsServiceProvider` to `./bootstrap/providers.php`
# See https://laravel.com/docs/11.x/providers
RUN composer create-project statamic/statamic statamic.local \
    && composer global require statamic/cli \
    && cd statamic.local \
    && php artisan make:provider HttpsServiceProvider

# Set path so Statamic CLI can be executed, if ever needed
ENV PATH="/root/.composer/vendor/bin:$PATH"

# Copy over specific files
COPY ./files/statamic/ /

# Prepare and run fixup.sh to fixup source files, and also
# make on-first-run.sh executable for supervisord.
RUN chmod +x /fixup.sh \
    && /fixup.sh \
    && chmod +x /on-first-run.sh

# Default port for a web app is 80, so why not use it?
EXPOSE 80

# Set our actually work directory which `on-first-run.sh`
# will copy files from /var/statamic/statamic.local to
# this directory
WORKDIR /var/www/html

# Start Supervisor to manage Nginx and PHP-FPM and to run
# `/on-first-run.sh` when the container is first started.
CMD ["supervisord", "-c", "/etc/supervisor/supervisord.conf"]






